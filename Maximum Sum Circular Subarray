class Solution {
    int kadanesAlgo(int arr[], int n)
    {
        int localMax = arr[0];
        int globalMax = arr[0];
        
        for(int i=1 ; i<n ; i++)
        {
            localMax = Math.max(arr[i], localMax + arr[i]);
            
            if(localMax > globalMax)
                globalMax = localMax;
        }
        
        return globalMax;
    }
    
    public int maxSubarraySumCircular(int[] arr) {
        
        int n = arr.length;
        
        int maxUnwrapSum = kadanesAlgo(arr, n);
        
        int totalSum = 0;
        
        for(int i=0 ; i<n ; i++)
        {
            totalSum += arr[i];
            arr[i] = -arr[i];
        }
        
        int maxWrapSum = totalSum - ( -kadanesAlgo(arr, n) );
        
        if(maxWrapSum == 0)     //All numbers are -ve
            return maxUnwrapSum;
        
        return Math.max(maxUnwrapSum, maxWrapSum);
        
    }
}
