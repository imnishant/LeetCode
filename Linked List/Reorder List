public void reorderList(ListNode head) {
        
        if(head == null)
            return;
        
        //Finding mid of linked list
        ListNode slow = head;
        ListNode fast = head;
        
        while(fast.next != null && fast.next.next != null)
        {
            slow = slow.next;
            fast = fast.next.next;
        }
        
        //Reverse second half of linked list
        ListNode middle = slow.next;
        slow.next = null;
        ListNode prev = null, cur = middle;
        
        while(cur != null)
        {
            ListNode next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        
        //Merge two halfs alternatively
        ListNode p1 = head;
        ListNode p2 = prev;
        
        while(p2 != null)
        {
            ListNode p1Next = p1.next;
            p1.next = p2;
            
            ListNode p2Next = p2.next;
            p2.next = p1Next;
            
            p2 = p2Next;
            p1 = p1Next;
        }
        
    }
